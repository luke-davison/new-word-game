"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAbilityText = void 0;
const enums_1 = require("../shared/enums");
const getAbilityText = (ability) => {
    switch (ability) {
        case enums_1.Abilities.Club: return 'Join the secret club.  Gain access to the secret letter store';
        case enums_1.Abilities.CopyAbilityInPosition1: return 'Uses / scores the ability of the letter in position one (cannot copy wild)';
        case enums_1.Abilities.CopyAbilityInPosition2: return 'Uses / scores the ability of the letter in position two (cannot copy wild)';
        case enums_1.Abilities.CopyAbilityInPosition3: return 'Uses / scores the ability of the letter in position three (cannot copy wild)';
        case enums_1.Abilities.CopyAbilityInPosition4: return 'Uses / scores the ability of the letter in position four (cannot copy wild)';
        case enums_1.Abilities.CopyAbilityInPosition5: return 'Uses / scores the ability of the letter in position five (cannot copy wild)';
        case enums_1.Abilities.Funding1: return 'Gain one extra money to use in every following game';
        case enums_1.Abilities.Funding2: return 'Gain two extra money to use in every following game';
        case enums_1.Abilities.InPosition1: return 'Score extra points if this letter is in the first position';
        case enums_1.Abilities.InPosition2: return 'Score extra points if this letter is in the second position';
        case enums_1.Abilities.InPosition3: return 'Score extra points if this letter is in the third position';
        case enums_1.Abilities.InPosition4: return 'Score extra points if this letter is in the fourth position';
        case enums_1.Abilities.InPositionLast: return 'Score extra points if this letter is in the last position';
        case enums_1.Abilities.MaxWordLength4: return 'Score extra points if the word is no more than four letters long';
        case enums_1.Abilities.MaxWordLength5: return 'Score extra points if the word is no more than five letters long';
        case enums_1.Abilities.MaxWordLength6: return 'Score extra points if the word is no more than six letters long';
        case enums_1.Abilities.MaxWordLength7: return 'Score extra points if the word is no more than seven letters long';
        case enums_1.Abilities.MinWordLength4: return 'Score extra points if the word is at least four letters long';
        case enums_1.Abilities.MinWordLength5: return 'Score extra points if the word is at least five letters long';
        case enums_1.Abilities.MinWordLength6: return 'Score extra points if the word is at least six letters long';
        case enums_1.Abilities.MinWordLength7: return 'Score extra points if the word is at least seven letters long';
        case enums_1.Abilities.NextToVowel: return 'Score extra points if this letter is next to a vowel';
        case enums_1.Abilities.NextToWild: return 'Score extra points if this letter is next to a wild';
        case enums_1.Abilities.NotNextToVowel: return 'Score extra points if this letter is not next to a vowel';
        case enums_1.Abilities.NotNextToWild: return 'Score extra points if this letter is not next to a wild';
        case enums_1.Abilities.OtherInPosition1: return 'Re-score the base points of the letter in position one';
        case enums_1.Abilities.OtherInPosition2: return 'Re-score the base points of the letter in position two';
        case enums_1.Abilities.OtherInPosition3: return 'Re-score the base points of the letter in position three';
        case enums_1.Abilities.OtherInPosition4: return 'Re-score the base points of the letter in position four';
        case enums_1.Abilities.OtherInPosition5: return 'Re-score the base points of the letter in position five';
        case enums_1.Abilities.Retain: return 'Retain this letter to use in every following game';
        case enums_1.Abilities.RetainLeft: return "Retain the letter to this letter's left to use in a following game";
        case enums_1.Abilities.RetainRight: return "Retain the letter to this letter's right to use in a following game";
        case enums_1.Abilities.Vowels: return 'Score extra points for every vowel in the word';
        case enums_1.Abilities.Wild: return 'Can be set as any letter';
        case enums_1.Abilities.Wilds: return 'Score extra points for every wild in the word';
        case enums_1.Abilities.WordLength4: return 'Score extra points if the word is exactly four letters long';
        case enums_1.Abilities.WordLength5: return 'Score extra points if the word is exactly five letters long';
        case enums_1.Abilities.WordLength6: return 'Score extra points if the word is exactly six letters long';
        case enums_1.Abilities.WordLength7: return 'Score extra points if the word is exactly seven letters long';
        default: return '';
    }
};
exports.getAbilityText = getAbilityText;
//# sourceMappingURL=getAbilityText.js.map